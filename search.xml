<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>مرحبا بالعالم</title>
      <link href="/2020/02/08/hello-world/"/>
      <url>/2020/02/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>The man who dares, the man<br>who decides what he wants to achieve<br>and works till his dreams all come<br>true,<br>the man who will alter his course when he<br>must! and bravely begin something<br>new, the man who’s determined<br>to make his world better,<br>who’s willing to learn and to lead<br>the man who keep trying<br>and doing his best is,<br>the man who knows how to succeed.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> starting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S.O.L.I.D أهم المبادئ البرمجية التي لا يمكن الاستغناء عنها</title>
      <link href="/2019/06/21/SOLID-Principles-OOD-in-Arabic/"/>
      <url>/2019/06/21/SOLID-Principles-OOD-in-Arabic/</url>
      
        <content type="html"><![CDATA[<p>عند العمل علي مشروع ما سواء كان كبيرا او صغيرا، لابد وانك واجهت مشاكل عدة تتطلب منك التعديل علي الكود كثيرا. ايضا عند اضافة مميزات جديدة للمشروع فانك تحتاج الي التعديلات مرارا وتكرارا. هذه العمليات المتكررة من التعديلات هي ما اوجدت هذه المبادئ بصورتها الحالية ، أي انه عند اتباعنا لهذه المبادئ في تصميم المشروع ، سيكون الكود اكثر قابلية للتعديل والتغيير مع المتطلبات الجديدة التي تطرأ عليه باستمرار وايضا سيكون اكثر قابلية لعمليات الاختبار والصيانة.</p><p><img src="/images/posts/solid/refactor.jpg" alt="&quot;Refactor Code&quot;"></p><h3 id="ما-هي-مبادئ-SOLID"><a href="#ما-هي-مبادئ-SOLID" class="headerlink" title="ما هي مبادئ SOLID"></a>ما هي مبادئ SOLID</h3><p>إن كنت من هواة الكتب فلابد وانك سمعت باسم Robert C. Martin وهو معروف بـ “العم بوب”. نشر العم بوب هذه المبادئ في بداية القرن الحالي كمبادئ متبعة عند تصميم التطبيقات وكتابة الكود. وهي عبارة عن خمسة مبادئ متمثلة في الكلمة SOLID حيث كل حرف يعبر عن مبدأ معين ، كل مبدا من هذه المبادئ سيساعدنا اكثر في كتابة كود قابل للتوسع وللتغيير بشكل مستمر مع كل اضافة او ميزة نحتاجها في المشروع. هذه المبادئ لا تتوقف علي لغة برمجة معينة حيث انها تعتبر Design patter اي نمط وطريقة تفكير يمكنك اتباعها للحصول علي الاحل الامثل عند كتابة الاكواد.<br>الجدول التالي يوضح ما هي هذه المبادي بشكل مختصر ، وسنقوم بتوضيحها بشكل تفصيلي في مقالة  علي جزئين.</p><p> <strong>انت تقرا الجزء الاول منها الان.</strong></p><table><thead><tr><th>الحرف</th><th>المفهوم</th></tr></thead><tbody><tr><td>S</td><td>Single responsibility principle</td></tr><tr><td>O</td><td>Open-closed principle</td></tr><tr><td>L</td><td>Liskov substitution principle</td></tr><tr><td>I</td><td>Interface segregation principle</td></tr><tr><td>D</td><td>Dependency inversion principle</td></tr></tbody></table><h3 id="Single-responsibility-principle-المسئولية-الواحدة"><a href="#Single-responsibility-principle-المسئولية-الواحدة" class="headerlink" title="Single responsibility principle - المسئولية الواحدة"></a>Single responsibility principle - المسئولية الواحدة</h3><p><img src="/images/posts/solid/tumblr.gif" alt=""><br>ينص هذا المبدأ علي انه اي تعديل علي الكلاس لابد وان يكون لسبب واحد فقط ، اي بمعني اخر انه لا يمكن للكلاس ان تقوم باكثر من وظيفة ، اي ان لهذه الكلاس وظيفة واحدة ومحددة ، عند التعديل عليها لا يتاثر اي كلاس اخر بهذا التعديل.</p><blockquote><p>The Single Responsibility Principle (SRP) states that each software module should have one and only one reason to change.</p></blockquote><p>حسناً، ماذا تعني بوظيفة واحدة ؟ بالطبع لا اقصد ان تحتوي الكلاس علي دالة واحدة فقط ، فيمكن ان تتواجد اكثر من دالة -methods- بالطبع ولكن كل هذه الدوال تخدم وظيفة معينة. دعنا نستوضح الامور بمثال اكثر واقعية.<br>لنفترض ان لدينا كلاس يقوم بقراءة جدول الموظفين من قاعدة بيانات شركة ما ، ثم يقوم بحساب المرتب المستحق للموظف بناءا علي معاير معينة وحفظه في قاعدة البيانات ، ثم يقوم بطباعة تقرير بطريقة معينة للمرتب المستحق للموظف.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Employee</span><span class="token punctuation">{</span><span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">printReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>سنجد هنا ان هذه الكلاس تقوم بشكل واضح بثلاث وظائف مختلفة:</p><ol><li>حساب المرتب المستحق للموظف عن طريق الجوريزم معين ومعايير معينة</li><li>حفظ بيانات الموظف في قاعدة البيانات</li><li>طباعة تقرير ببيانات معينة عن هذا الموظف</li></ol><p>اعتقد الان ان one reason to change - سبب واحد للتغيير - واضحة بشكل كبير ، ولنزيد الامور وضوحا دعنا نفترض ان المدير المالي للشركة قرر تغيير الاستراتيجية التي يتم بها حساب المرتب المستحق للموظف ، اظن سيكون علينا تغيير الكلاس بسبب هذا القرار. السيناريو الثاني وهو ان المدير العام يريد تغيير التقرير الذي يتم طباعته ! مرة اخري سنغير الكلاس.<br>لنفترض هذه المرة ان هناك تعديلات علي قاعدة البيانات ، تعلم الان ما ستفعله ، ستغير الكلاس مرة اخري مع العلم انه لا يوجد علاقة بين تغيير قاعدة البيانات-Schema- وبين الموظف. او بين التقرير الذي يتم طباعته للمدير العام والموظف !</p><p>يعتبر مبدأ المسئولية الواحدة من اسهل المبادئ وفي نفس الوقت من اصعبها وسنري في باقي المقالة كيف تعمل هذه المبادئ معا لانتاج كود قابل للقراءة والتعديل والصيانة.</p><h3 id="Open-Closed-principle"><a href="#Open-Closed-principle" class="headerlink" title="Open-Closed principle"></a>Open-Closed principle</h3><p>ينص هذا المبدأ علي ان الكلاس يجب ان تكون قابلة للمزيد من الاضافات لكن بدون التعديل علي الكود الاصلي لهذه الكلاس.</p><blockquote><p>Software entities (classes, modules, functions, etc.) should be open for extension but closed for modification</p></blockquote><p>الامر ليس مقتصرا فقط علي الكلاس ! ولكن يؤخذ دائما في الاعتبار عند تصميم اي كيان سواء كان كلاس او دالة ، انها قابلة للتطور والتغيير الدائم بشرط عدم التعديل علي الكود المصدري!<br><img src="/images/posts/solid/ocp.jpg" alt=""><br>لناخذ نفس المثال السابق مع تعديلات بسيطة لنستوضح الامور اكثر.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Employee</span><span class="token punctuation">{</span><span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>باعتبار ان لدي كلاس تعبر عن الموظف ، وهناك انواع مختلفة من الموظفين في الشركة.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">SeniorEmployee</span> <span class="token keyword">extends</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// some changes</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">JuniorEmployee</span> <span class="token keyword">extends</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// some changes</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">CalculatePay</span><span class="token punctuation">{</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CalculatePay</span> <span class="token punctuation">{</span>      <span class="token keyword">public</span> Money <span class="token function">calculate</span><span class="token punctuation">(</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> employees<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              Employee employee <span class="token operator">=</span> employees<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>employee <span class="token keyword">instanceof</span> <span class="token class-name">JuniorEmployee</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token punctuation">}</span>               <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>employee <span class="token keyword">instanceof</span> <span class="token class-name">SeniorEmployee</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">return</span> <span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>الان هذه الكلاس تقوم بحساب المرتب للموظف علي حسب نوعية الموظف في الشركة.<br>لنتخيل الان اننا نريد اضافة نوع جديد من الموظفين او العاملين بالشركة وليكن Intern ، الامر واضح ، سيكون علينا تعديل الكلاس - CalculatePay - كما يلي :</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">InternEmployee</span> <span class="token keyword">extends</span> <span class="token class-name">Employee</span>    <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">CalculatePay</span><span class="token punctuation">{</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CalculatePay</span> <span class="token punctuation">{</span>      <span class="token keyword">public</span> Money <span class="token function">calculate</span><span class="token punctuation">(</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> employees<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              Employee employee <span class="token operator">=</span> employees<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>employee <span class="token keyword">instanceof</span> <span class="token class-name">JuniorEmployee</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// code ...</span>              <span class="token punctuation">}</span>               <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>employee <span class="token keyword">instanceof</span> <span class="token class-name">SeniorEmployee</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token comment" spellcheck="true">// code ...</span>              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>employee <span class="token keyword">instanceof</span> <span class="token class-name">InternEmployee</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token comment" spellcheck="true">// code ...</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">return</span> <span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>وهكذا مع كل اضافة جديدة سنضطر الي تعديل الكود مرة اخري ، ولكن اليس كل شئ يعمل ؟! لماذا اذن نهتم ؟ لماذا يعتبر هذا الاسلوب خاطئ ؟<br> تخيل ان هناك كلاس اخري تعتمد علي هذه الكلاس ، وبالتالي عند التعديل عليها لابد وان تعدل ايضا علي الاخري لكي تتوافق مع هذا التعديل ، تخيل الان ان بدلا من واحدة اصبحت اثنتين او ثلاث ! لذلك يعتبر هذا التصميم خاطئ ، تذكر اننا دائما نسعي لكود اكثر قابلية للقراءة والتعديل في المستقبل!</p><h4 id="الطريق-الصحيح"><a href="#الطريق-الصحيح" class="headerlink" title="الطريق الصحيح"></a>الطريق الصحيح</h4><p>لندع الامور الان تتوافق مع مبدأ OCP ولنري الفرق !</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span>    <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">abstract</span> Money <span class="token function">CalculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">JuniorEmployee</span> <span class="token keyword">extends</span> <span class="token class-name">Employee</span>    <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">SeniorEmployee</span> <span class="token keyword">extends</span> <span class="token class-name">Employee</span>    <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">CalculatePay</span>    <span class="token punctuation">{</span>      <span class="token keyword">public</span> Money <span class="token function">calculate</span><span class="token punctuation">(</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Employee employee <span class="token operator">:</span> employees <span class="token punctuation">)</span> <span class="token punctuation">{</span>          employee<span class="token punctuation">.</span><span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>الان اذا اردنا ان نقوم باضافة نوع جديد من العاملين بالشركة ، كل ما علينا هو وضع الاضافة فقط بدون اي تعديلات علي كلاس CalculatePay</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">InternEmployee</span> <span class="token keyword">extends</span> <span class="token class-name">Employee</span>    <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> Money <span class="token function">calculatePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Liskov-Substitution-Principle"><a href="#Liskov-Substitution-Principle" class="headerlink" title="Liskov Substitution Principle"></a>Liskov Substitution Principle</h3><p><code>1. مفهوم الInheritance الاول</code></p><ol start="2"><li>المشكلة وعلاقتها بالفتح والاغلاق</li><li>شرح المفهوم وعنوانه</li><li>لماذا يعتبر هذا مشكلة</li><li>الحلول والفائدة</li></ol><p>احد المبادئ الاساسية للـ OOP المعروفة بالبرمجة الكائنية هو مبدأ الوراثة - Inheritance - حيث يوجد كلاس او كائن يمكنه الوراثة من كائن اخر ، والوراثة هنا يقصد بها استخدام الدوال والمتغيرات في الكلاس الاب او “الاصلية” مع اضافة متغيرات جديدة للكلاس الابن او “الفرعية” وتسمي Subclass<br><img src="/images/posts/solid/inheritance.jpg" alt="مفهوم الوراثة"><br>قبل اي شئ دعنا ناخذ مثال بسيط يعبر عن المشكلة في الاستخدام الخاطئ لمفهوم الوراثة ، لنفترض المثال التالي:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Vehicle</span>    <span class="token punctuation">{</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token keyword">extends</span> <span class="token class-name">Vehicle</span>    <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Bike</span> <span class="token keyword">extends</span> <span class="token class-name">Vehicle</span>    <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// المشكلة</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>في هذا المثال ، يوجد مشكلة هنا ، وهي اننا قمنا بوراثة دالة لايمكن ان نستخدمها في الكلاس المسمي Bike حيث ان الدراجة لا يمكن ان تحتوي علي محركات!<br>إذن هذا المبدا يحل مشكلة الاستخدام الخاطئ لمفهوم الوراثة. حيث ينص علي<br><code>اذا كان هناك كلاس S ترث من كلاس T, اذن يمكن تعويض اي كائن -object- من النوع T باخر من النوع S بدون تعديل اطلاقا علي محتوي الكلاس!</code></p><blockquote><p>In a computer program, if S is a subtype of T, then objects of type T may be replaced with objects of type S i.e., objects of type S may substitute objects of type T without altering any of the desirable properties of that program (correctness, task performed, etc.)</p></blockquote><p>لناخذ الامور خطوة بخطوة ، يسمي هذا المبدا Liskov وهو علي اسم عالمة الكمبيوتر Barbara Liskov و Substitution وهي تعني التعويض او الاستبدال !لناخذ مثال! </p><h3 id="المصادر"><a href="#المصادر" class="headerlink" title="المصادر"></a>المصادر</h3><p><a href="https://en.wikipedia.org/wiki/SOLID" target="_blank" rel="noopener">SOLID wikipedia</a><br><a href="https://blog.cleancoder.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html" target="_blank" rel="noopener">Clean coder: SRP</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OOD </tag>
            
            <tag> Software design </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>التعامل مع نظام الملفات -Filesystem- في ROS</title>
      <link href="/2019/04/01/HowToDealWithROSfilesystem/"/>
      <url>/2019/04/01/HowToDealWithROSfilesystem/</url>
      
        <content type="html"><![CDATA[<p>عند سماع كلمة File system فان اول شئ نفكر به هو OS لارتباط نظام الملفات دائما بانظمة التشغيل لكننا نعلم جيدا ان ROS ليس بنظام تشغيل كما المعتاد.</p><h3 id="ما-هو-Filesystem"><a href="#ما-هو-Filesystem" class="headerlink" title="ما هو Filesystem"></a>ما هو Filesystem</h3><p>اذن ما نظام التشغيل؟ المقصود بنظام التشغيل بشكل عام هو انه طريقة تساعدنا في التحكم بتخزين واسترجاع الملفات بسهولة.<br>يساعدنا نظام الملفات في تنظيم الملفات بشكل اكثر سهولة حيث يفضل كل الملفات الي اجزاء تكون مشتركة او بينها رابط ما وهو ما يسمي بهيكلة البيانات  اي ان البيانات /الملفات يتم هيكلتها بطريقة معينة بحيث يسهل عملية الوصول والتعرف عليها.</p><h3 id="نظام-الملفات-في-ROS"><a href="#نظام-الملفات-في-ROS" class="headerlink" title="نظام الملفات في ROS"></a>نظام الملفات في ROS</h3><p>لكي نفهم اكثر كيف يعمل ROS لابد ان نفهم نظام ملفاته وكيف يتم تنظيم وادارة الملفات في ROS ، لذلك دعنا ناخذ نظرة عامة كيف نفهم طريقة عمله.<br><img src="/images/posts/ros/filesystem.jpg" alt=""><br>ينقسم نظام الملفات في ROS بشكل اساسي الي ثلاث مستويات</p><h4 id="Package"><a href="#Package" class="headerlink" title="Package"></a>Package</h4><p>هي نواة التشغيل في ROS ، والباكدج يمكننا ان نطلق عليها انها مجموعة من الملفات مجمعة في ملف واحد لتؤدي وظيفة معينة.<br>هذه الملفات قد تكون اكواد برمجية او عقد Nodes او مكتبات libraries.</p><h4 id="Metapackages"><a href="#Metapackages" class="headerlink" title="Metapackages"></a>Metapackages</h4><p>هي في الاساس package ولكنها تعتمد علي packages اخري لكي تؤدي وظيفتها. علي سبيل المثل يوجد في ROS باكيدج Package تسمي Navigation وهي خاصة ببناء الخرائط للبيئة المحيطة بالروبوت<br>هذه الPackage تعتمد علي packages اخري لتكمل وظيفتها ، فمثلا هي تحتوي علي package خاصة بالحساسات sensors وpackage اخري خاصة برسم محاكاة للبيئة - الخريطة -<br>.</p><h4 id="Package-Mainfest"><a href="#Package-Mainfest" class="headerlink" title="Package Mainfest"></a>Package Mainfest</h4><p>(package.xml) وهو ملف توصيفي للـPackage حيث يحتوي علي وصف كامل للباكيدج من حيث اعتماديتها علي package اخري وايضا رقم الاصدار والمؤلف والرخصة …إلخ</p><h4 id="Messages"><a href="#Messages" class="headerlink" title="Messages"></a>Messages</h4><p>يقوم ROS بالاتصال عن طريق ارسال ROS Messages وهي ملف يحتوي علي البيانات Data المراد ارسالها الي Node معينة في النظام وتكون صيغة الملف .msg ويتواجد في المسار التالي</p><pre><code>our_package/msg/message_files.msg.</code></pre><h4 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h4><p>وهي تشبه الي حد كبير Messages وسنشرحها بالتفصيل في الامثلة</p><pre><code>our_package/srv/MyServiceType.srv</code></pre><h4 id="نظام-الملفات-في-ROS-1"><a href="#نظام-الملفات-في-ROS-1" class="headerlink" title="نظام الملفات في ROS"></a>نظام الملفات في ROS</h4><p><img src="/images/posts/ros/rosfiles.PNG" alt=""><br>turtlesim package هي من اشهر الامثلة الموجودة في ROS ، وهذه الصورة توضح اكثر ترتيب الملفات والمجلدات - نظام الملفات - في هذه package حيث نري انها تحتوي علي :</p><ol><li>include folder : وهو مجلد يحتوي علي headers للمكتبات او الاكواد المستخدمة</li><li>msg folder : كما قولنا سابقا ، الرسائل المراد تمريرها بين النظام توجد في هذا والمجلدات</li><li>src : يحتوي علي الاكواد وبكل تاكيد باللغة التي تفضلها</li><li>srv : وهي الservices الموجودة في النظام<br>يوجد ملفات اكثر في package الحقيقة ويمكن تصفحها ومعرفة تفاصيلها عن طريق الامر<pre><code>rospack &lt;package_name&gt;</code></pre></li></ol><h3 id="ROS-Workspace"><a href="#ROS-Workspace" class="headerlink" title="ROS Workspace"></a>ROS Workspace</h3><p>workspace هو مجلد يحتوي علي جميع الpackages التي نريدها او نعمل عليها ، كما يوجد به ملف Cmakelist.txt والذي يستخدم في عملية Compiling.<br><img src="/images/posts/ros/rosfiles.PNG" alt=""><br>يحتوي هذا المجلد علي ثلاث ملفات رئيسية</p><blockquote><p>src=source : وهو المجلد الذي يحتوي علي كل packages التي نعمل عليها واقصد بالكاديج هنا ايضا المشاريع</p></blockquote><blockquote><p>build : يحتوي هذا المجلد علي ملفات cmake , catkin وهي الخاصة بعملية الcompile</p></blockquote><blockquote><p>devel = development: يحتوي علي الملفات في مرحلة testing والتطوير  </p></blockquote><h3 id="مشروع-جديد"><a href="#مشروع-جديد" class="headerlink" title="مشروع جديد"></a>مشروع جديد</h3><p>لكي نفهم اكثر دعنا نطبق المفاهيم السابقة علي مثال بسيط. لدينا نقطتين نريد ان يتم التواصل بينهم عن طريق ROS .<br>واحده منهم ستكون Publisher node اي ستكون هي الجهة المرسلة للبيانات ، قد تكون هذه البيانات هي قراءات الحساسات مثلا او امر معين يتم ارساله للروبوت.<br>في الجهة المقابلة سيكون هناك Subscriber node وهي الجهة المستقبلة</p><blockquote><p>يمكن لاي node في النظام ان تكون publisher او subscriber او الاثنين معا</p></blockquote><p>الان نقوم بعمل package جديده وذلك في مجلد workspace الذي تم تحديده سابقا اثناء عملية تنصيب ROS</p><pre class="line-numbers language-bash"><code class="language-bash">$ catkin_create_pkg <span class="token operator">&lt;</span>package_name<span class="token operator">></span> rospy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>catkin_create_pkg<br>هو الامر المستخدم في ros لانشاء باكيدج جديدة</p></blockquote><blockquote><p>rospy وهي package موجودة بالفعل في نظام ros وهنا نخبر النظام انه لدينا package جديدة تعتمد بشكل اساسي علي rospy وهي اختصار لـ ROS Python حيث تكون python هي اللغة الاساسية للبرمجة في هذه الحالة</p></blockquote><p>انشاء new package باسم helloWorld</p><pre class="line-numbers language-bash"><code class="language-bash">catkin_create_pkg helloWorld rospy $<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="إنشاء-Node"><a href="#إنشاء-Node" class="headerlink" title="إنشاء Node"></a>إنشاء Node</h4><p>كلمة Node في ROS تشير الي Process بمعني اخر عملية حسابية = كود برمجي لوظيفة معينة ، قد تكون Node عبارة عن لوحة اردوينو او كمبيوتر شخصي ويوجد في ROS دائما اكثر من Node تتفاعل مع بعضها بشكل او باخر لتؤدي عدة وظائف في الروبوت المراد تطويره. فعلي سبيل المثال قد يكون لدينا Node مسئولة عن التحكم في radar و node اخري مسئولة عن التحكم في مواتير و اخري مسئولة عن بناء خريطة بناءا علي قراءات تاتي من nodes اخري وهكذا.<br>يتم انشاء ROS Node بواسطة مكتبة موجوده في ros تدعي <a href="http://wiki.ros.org/Client%20Libraries" target="_blank" rel="noopener">Ros client library</a> وهي تحدد اللغة التي يمكن انشاء node بها مثل <a href="http://wiki.ros.org/roscpp" target="_blank" rel="noopener">roscpp</a>, <a href="http://wiki.ros.org/rospy" target="_blank" rel="noopener">rospy</a></p><p>في المثال الذي نعمل عليه لدينا عقدتين - إن شئت ان تمسيها عقدة بالمعني الحرفي للكلمة - two nodes كما في الصورة ، واحدة تدعي talker والاخري listener<br><img src="/images/posts/ros_07.png" alt=""></p><h4 id="Publisher-Node"><a href="#Publisher-Node" class="headerlink" title="Publisher Node"></a>Publisher Node</h4><p>rospy هي المكتبة المستخدمة لكتابة nodes في هذا المثال ، وهي تعتمد علي python.<br><img src="/images/posts/ros_11.png" alt=""><br>يتم انشاء node ك publisher عن طريق الامرين :</p><pre class="line-numbers language-python"><code class="language-python">pub <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Publisher<span class="token punctuation">(</span><span class="token string">'chatter'</span><span class="token punctuation">,</span> String <span class="token punctuation">,</span>queue_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span><span class="token string">'talker'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>(rospy.Publisher(&lt;topic_name&gt;, &lt;Date_type_class&gt; , &lt;Queue_size&gt;   </p></blockquote><p>queue size وهو يعتبر كطابور انتظار حيث من الممكن ان ترسل الnode الواحدة اكثر من message في اوقات غير منتظمة لاكثر من node مختلفة لذلك لابد من تحديد حجم الـqueue.</p><blockquote><p>(rospy.init_node(‘name_of_node’<br>(rospy.Rate(10 وهو معدل ارسال - publish - الرسائل messages</p></blockquote><h4 id="Subscriber-Node"><a href="#Subscriber-Node" class="headerlink" title="Subscriber Node"></a>Subscriber Node</h4><p><img src="/images/posts/ros_12.png" alt=""></p><pre class="line-numbers language-python"><code class="language-python">rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span>'listener<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>لانشاء node تدعي listener</p><pre class="line-numbers language-python"><code class="language-python">rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">'chatter'</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>rospy.Subscriber(&lt;topic_name&gt;, &lt;Date_type_class&gt; , <callback>)</callback></p><p>callback function وهي الدالة التي يتم استدعائها عندما يتم استقبال اي بيانات</p><h4 id="كيف-يتم-الامر"><a href="#كيف-يتم-الامر" class="headerlink" title="كيف يتم الامر"></a>كيف يتم الامر</h4><p>بعد كتابة nodes التي نعمل عليها ، اذن كيف يتم الامر ؟<br>قولنا سابقا انه يتم تمرير الرسائل messages بين النظام عن طريق قناة افتراضية تدعي topic ويتم اختيار اسمها عند انشاء nodes المختلفة كما في publisher وفي المثال هنا تدعي chatter.<br>يتم تشغيل كل node علي حده في terminal منفصلة عن طريق الامر</p><pre class="line-numbers language-bash"><code class="language-bash">$ rosrun <span class="token operator">&lt;</span>package_name<span class="token operator">></span> <span class="token operator">&lt;</span>script/node_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/posts/ros_09.png" alt=""><br>رائع! كل شئ يعمل كما توقعنا تماما.</p><h4 id="ملاحظات-بسيطة"><a href="#ملاحظات-بسيطة" class="headerlink" title="ملاحظات بسيطة"></a>ملاحظات بسيطة</h4><ol><li>قبل ان تقوم بتنفيذ الامر <strong>rosrun</strong> لابد ان يعمل نظام ROS علي الكمبيوتر! معني ذلك ان هناك ما يشبه السيرفر لابد من تشغيله اولا حيث انه يحتوي علي كل المكتبات والاوامر التي تريدها لتبدا العمل مع ROS.<pre class="line-numbers language-bash"><code class="language-bash">$ roscore<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>بعد انشاء package جديدة عن طريق الامر catkin_create_pkg لابد من اخبار النظام عن التغييرات التي ستحدث اثناء عملية compiling<br>وذلك عن طريق الامر<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">source</span> devel/setup.bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Robotics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ملخص كتاب Autonomous Robotics and Deep Learning</title>
      <link href="/2019/04/01/AutonomousRoboticsAndDeepLearningBookReview/"/>
      <url>/2019/04/01/AutonomousRoboticsAndDeepLearningBookReview/</url>
      
        <content type="html"><![CDATA[<h3 id="لماذا-هذا-الكتاب"><a href="#لماذا-هذا-الكتاب" class="headerlink" title="لماذا هذا الكتاب"></a>لماذا هذا الكتاب</h3><p>ان اهم ما يميزنا نحن البشر هو قدرتنا الفائقة علي ادراك ما حولنا بشكل جيد. ان كل ما تسعي الية شركات التقنية الخاصة بتطوير الروبوتات اليوم هو<br>جعل الروبوت اكثر ادراكا للبيئة المحيطة - Perception - وكيف يتعامل مع المتغيرات الجديدة!<br>هذا الكتاب هو قراءة سريعة ومختصرة لكيف يتم هذا الامر ؟ كيف يمكن للروبوت ادراك البيئة المحيطة والتفاعل معها بشكل او باخر.<br>يتحدث الكتاب بشكل مختصر فيما لايزيد عن 80 صفحة عن كيفية الدمج بين النظريات والعلوم المختلفة كـcomputer vision و deep learning وايضا robot Kinematics<br>لتطوير روبوت بامكانه التفاعل مع البيئة المحيطة به. نجد اليوم مشاريع كثيرة بغض النظر عن مدي التعقيد في المشروع تحاول الدمج بين علم الروبوت وعلم تعلم الآلة ، لذلك هذا الكتاب ملخص جيد سيقودك الي معرفة التقنيات والنظريات المهمة لبناء روبوت اكثر ذكاءا.</p><p><img src="/images/posts/book_review/robot_1.jpg" alt="Autonomous Robot System"></p><h3 id="كيف-يري-العالم-الروبوت"><a href="#كيف-يري-العالم-الروبوت" class="headerlink" title="كيف يري العالم الروبوت"></a>كيف يري العالم الروبوت</h3><p>يجلس طويلا في مختبره - مكتبه - محاولا جاهدا ان يجعل الروبوت الخاص به اكثر ذكاءا واكثر وعيا يشبه الي حد كبير<br>ادراك ووعي الانسان. مع التطور السريع والذاتي للروبوت ، بدا الروبوت يدرك انه اكثر ذكاءا الي حد كبير جدا من صانعه لدرجة<br>انه اتخذ قراره بالاستغناء عنه وتدمير كل ما له علاقة بالحضارة البشرية لتبدا ثورة رقمية يكون بطلها هو ذاك الروبوت. لاشك<br>انك رايت الكثير من الافلام والمسلسلات التي تدور حول هذه الفكرة بشكل او باخر مثل westworld و Ex machina.<br>تبدا مقدمة الكتابة بالعلاقة الهوليوودية ما بين عالمنا والروبوتات وما هو الروبوت وكيف نطلق علي الة معينة انها روبوت! لاشك ان كثير منا راي الذراع الصناعي وكيف يقوم بنقل الاشياء او تركيبها ونطلق عليه روبوت ، علي العكس اننا لا نطلق علي الحزام الالي الذي ينقل المنتجات او يجعلها تمر علي مراحل متعددة في الماكينة - كما في حزام الحقائب في المطار - روبوت مع انه يعتبر روبوتا بشكل او باخر.<br>تنتهي مقدمة الكتاب بلمحة مختصرة عن الذكاء الاصطناعي وانواعه وتاثيره وتطور علي “تعلم الالة” ليصل الي ما نحن عليه اليوم.<br><img src="/images/posts/book_review/robot_vs_belt.jpg" alt="Robotic Arms vs conveyor belt"></p><h3 id="نظرة-علي-الاحصاء-والاحتمالات"><a href="#نظرة-علي-الاحصاء-والاحتمالات" class="headerlink" title="نظرة علي الاحصاء والاحتمالات"></a>نظرة علي الاحصاء والاحتمالات</h3><p>يبدا الكتاب بشرح المبادئ الاساسية للاحتمالات والاحصاء ويتطرق الي نظرية في غاية الاهمية وتدخل في جميع التطبيقات تقريبا للذكاء الاصطناعي وهي نظرية بايز.<br>يعطينا الكتاب ايضا لمحات عن انواع التوزيع الاحتمالي ونظرياته وقوانينه وكيفية استخدام تلك القوانين للحصول علي نتائج محددة<br><img src="/images/posts/book_review/distr.jpg" alt="التوزيع الطبيعي"></p><h4 id="الاحتمالات"><a href="#الاحتمالات" class="headerlink" title="الاحتمالات"></a>الاحتمالات</h4><p>نعيش اليوم في عالم يملؤه التعقيد والاحتمالات ، فالاحتمال هو احتمالية حدوث حدث معين ومعرفة مدي فرص وقوعه هو الجزء الرياضي الذي تناقشه قوانين الاحتمالات.<br>$$ 1 \leq P(E) \leq 0 $$<br>احتمال وقوع اي حدث تتراوح دائما ما بين 0 و 1 فاحتمالية وقع الحدث E = 0 يعني استحالة وقوعه ، وعلي النقيض احتمالية حدوث الحدث E = 1 تعني حتمية وقوعه.</p><p>لكي اوضح هنا بعض القوانين الاساسية والمهمة دعنا نبدا بالمثال الاكثر شهرة عند شرح الاحتمالات ، رمي قطعة نقود معدنية في الهواء - ملك وكتابة - فاحتمال وقوع العملة المعدنية علي اي وجه متساوي تماما لاحتمال وقوعها علي الوجه الاخر. لنفترض ان K تشير الي ملك و W تشير الي كتابة ، واردنا التعبير الرياضي لاحتمال وقوع العملة المعدنية علي الوجه W :<br>$$ P\left(A\right) = \frac{W}{K,W} = \frac{1}{2} $$<br>A هي احتمال وقوع العملة المعدنية علي احد الوجهين ، ونفهم من هذه المعادلة ان احتمالية وقوع K , W متساوية. هذا يقودنا الي مفهوم اخر وهو ان احتمال وقوع جميع الاحداث = 1<br>$$ \sum_i P\left(X_{i}\right) = 1 $$<br>من خلال هذا القانون يمكننا استنتاج ان احتمال وقع الحدث المكمل او المتمم للحدث A يكون :<br>$$ P\left(A^{‘}\right) = 1 - P\left(A\right) $$</p><h4 id="الاحتمال-الشرطي-ونظرية-بايز"><a href="#الاحتمال-الشرطي-ونظرية-بايز" class="headerlink" title="الاحتمال الشرطي ونظرية بايز"></a>الاحتمال الشرطي ونظرية بايز</h4><p>Conditional Probability او الاحتمال الشرطي ، وهو يعرف باحتمال وقوع حدث مرتبط بوقوع حدث أخر اي انه يعبر عن حدثان وقوع احدهما مرتبط بوقع الاخر. مثال علي ذلك هو احتمال نجاح طالب في جميع المواد مع العلم انه قد نجح بالفعل في مادة الرياضيات علي سبيل المثال ، ويتم التعبير عن ذلك الامر رياضيا بالشكل التالي :<br>$$ P\left(A|B\right) $$</p><blockquote><p>وتقرأ كالتالي احتمال وقع الحدث A مع العلم ان الحدث B قد وقع</p></blockquote><p>هذا النوع من الاحتمالات يسمي الاحتمالات الغير مستقلة اي ان وقوع احد الحديثين مرتبط بوقوع الاخر.</p><h4 id="نظرية-بايز"><a href="#نظرية-بايز" class="headerlink" title="نظرية بايز"></a>نظرية بايز</h4><p>نظرية بايز هي من هم التطبيقات علي نظريات الاحتمال علي الاطلاق ، وهي من النظريات التي غيرت شكل العالم في فترة من الفترات كذلك تعتبر من اهم تطبيقات الذكاء الاصطناعي حيث انها تدخل في تطبيقات مثل كشف الرسائل المزعجة spam وايضا كشف الغش فيالالعاب الالكترونية وتستخدم ايضا في الروابط المقترحة التي تظهر لك دائما عند مشاهدة فيديو او قراءة رابط معين ، كذلك تدخل هذه النظرية في تطبيقات مثل مجال الادارة او الكيمياء العضوية.</p><p><img src="/images/posts/book_review/Rolling-Dice.jpg" alt=""><br>قد نتحدث في مقال مفصل عن هذه النظرية لكن ما اريدك ان تعرفه هو ماذا تقول هذه النظرية<br>لو اعتبرنا اننا نمتلك مكعب “نرد” يحتوي فقط علي الاعداد الزوجية ، فما هو احتمال ان نرمي النرد ونحصل علي الرقم 6 ؟<br>A -&gt; هو الحدث الذي يعبر عن احتمالية ان نحصل علي الرقم 6<br>B -&gt; هي الحدث الذي يعبر عن ان قطعة النرد الخاص بنا تحتوي فقط علي ارقام زوجية</p><p>$$ P\left(A|B\right) = \frac{1}{3} $$</p><p>تنص نظرية بايز بما يلي:<br>$$ P\left(A|B\right) = \frac{P\left(A\right) × P\left(B|A\right)}{P\left(B\right)} $$<br>دعنا نطبق المثال السابق لنري كيف نحصل علي نتيجة:<br>P(B|A) -&gt; وهي تعني عند رمي النرد والحصول علي رقم ما ما هي احتمالية ان يكون هذا الرقم زوجي؟ بكل تاكيد الاجابة ستكون 1 اي ان الرقم بكل تاكيد سيكون زوجي لاننا افترضنا ذلك من البداية<br>P(A) -&gt; وتعني احتمال ان احصل علي رقم ما خلال رمي النرد لمرة واحدة وايضا بكل تاكيد هي 1/6<br>P(B) -&gt; وهي احتمالية ان يكون الرقم زوجي او فردي عند رمي النرد ايضا لمرة واحدة وايضا تكون النتيجة 1/2<br>لذلك عن تطبيق نظرية بايز نحصل علي الناتج التالي:<br>$$ P\left(A=6|B=even\right) = \frac{P\left(A\right) × P\left(B|A\right)}{P\left(B\right)} = \frac{1 * (1/6)}{(1/2)} = \frac{1}{3} $$</p><h3 id="كل-شئ-عبارة-عن-مصفوفة"><a href="#كل-شئ-عبارة-عن-مصفوفة" class="headerlink" title="كل شئ عبارة عن مصفوفة"></a>كل شئ عبارة عن مصفوفة</h3><p>في هذا الفصل تحدث الكتاب عن المصفوفات واهم خواصها والعمليات عليها وتحدث بشكل مختصر جدا عن القيم والمتجهات الذاتية Eigenvalues and eigenvectors وسنحاول القاء الضوء عليها سريعا.<br><img src="/images/posts/book_review/matrix.png" alt="What is the matrix?"><br>المصفوفات ليس فقط مجرد معادلات رياضية ولكنها تدخل في كثير من التطبيقات المختلفة مثل Computer vision فتعتبر المصفوفات هي المفتاح الرئيسي في هذا المجال وايضا في Images compression , Dimensionality reduction وتدخل ايضا المصفوفات في تطبيقات الMachine Learning و Quantum physics و System control.<br>كل شئ حولنا يمكن بشكل او باخر تمثيلة بمصفوفة تعبر عنه ، المصفوفة بالتعبير الرياضي هي مجموعة من الارقام مرتبة في شكل صف وعمود ويتم تمثيلها بالشكل التالي :</p><p>$$A=\begin{bmatrix}a_{11} &amp; a_{12} &amp; … &amp; a_{1n} \\ a_{21} &amp; a_{22} &amp; … &amp; a_{2n} \\ : &amp; : &amp;  &amp; : \\ a_{m1} &amp; a_{m2} &amp; … &amp; a_{mn}\end{bmatrix}$$</p><p>يعبر عن هذه المصفوفة بانها M×N حيث M هي عدد الصفوف و N تمثل عدد الاعمدة ، وكل رقم خلال هذه المصفوفة يسمي عنصر.<br>المصفوفات هي من اهم مفاتيح الجبر الخطي وطالما نتحدث عن المصفوفات والجبر الخطي فاننا نتحدث عن Linear Transformation او ما يسمي بالتحويل الخطي.</p><h4 id="كيف-يري-الكمبيوتر-الاشياء"><a href="#كيف-يري-الكمبيوتر-الاشياء" class="headerlink" title="كيف يري الكمبيوتر الاشياء"></a>كيف يري الكمبيوتر الاشياء</h4><p><img src="/images/posts/book_review/sample-matrix.gif" alt="How computer see?"><br>كل ما نراه امامنا علي شاشة الكمبيوتر هو عبارة عن مصفوفة فاذا اردنا مثلا ان “نكبر” scale صورة ما ، فان هذا الامر يتم عن طريق ضرب المصفوفة التي تعبر عن الصورة في رقم معين يمثل مقدار التكبير Scaling factor ، فماذا لو اردنا ان ندور” rotate الصورة “ ؟! أجل ، بالتاكيد عن طريق ضرب المصفوفة في مصفوفة اخر تمثل القيم التي يمكن من خلالها عمل rotation او تدوير للصورة.<br><img src="/images/posts/book_review/transformation.jpg" alt=""><br>اشرنا سابقا الي مفهوم Linear Transformation ولكن ماذا يعني ؟ دعنا نبدا بكلمة Transformation وهي تعني دالة ما يكون لديها دخل input وتعطينا output خرج معين بعد عملية معينة تقوم بها هذه الدالة ، كما وضحت في الصورة المصفوفة تقوم بعمل stretching للمصفوفة الاصلية وتغيير اتجاهاها ، ولكي نقول علي هذا التحول خطي او linear لابد ان يتوفر نقطتين الاولي وهي ان كل الخطوط ما زالت خطية اي لا تحتوي علي اي انحناءات او كيرفات والنقطة الثانية ان بعد التحويل نقطة الاصل origin هي نفسها ولم تتغير</p><h4 id="Eigenvectors-and-Eigenvalues-القيم-والمتجهات-الذاتية"><a href="#Eigenvectors-and-Eigenvalues-القيم-والمتجهات-الذاتية" class="headerlink" title="Eigenvectors and Eigenvalues القيم والمتجهات الذاتية"></a>Eigenvectors and Eigenvalues القيم والمتجهات الذاتية</h4><p><img src="/images/posts/book_review/Mona_Lisa_eigenvector_grid.png" alt=""><br>رائع ! اذن ما علاقة كل هذا بالـ eigenvectors او بالعربية المتجهات الذاتية ؟ لا اخفي عليك ان هذا الموضوع خصيصا كان شئ صعب فهمه او تخيله طوال سنوات الجامعة! ولكن دعني اوضح لك بعض الاشياء لربما تسهل عليك فهم هذا الموضوع.<br>إن القيم والمتجهات الذاتية هي خصائص مميزة للمصفوفة وتختلف دراستها او فهمها بحسب التطبيق الذي تعمل عليه بكل تاكيد لكن يظهل المفهوم ثابت ، كما شرحنا سابقا التحويل من احداثيات الي اخري في Linear transformation ، فلو نظرنا الي الصورة السابقة نجد اننا قمنا بالفعل بعمل تحويل او بمعني ادق Shearing اي قص لبعض الاجزاء مع تغيير احداثيات الصورة ، سنجد ان المتجهة باللون الاحمر قد تغير اتجاه لكن المتجه باللون الازرق ظل كما هو في نفس الاتجاه ! الان ماذا يعني ذلك ؟!<br>تخمينك صحيح ! المتجه باللون الازرق هو متجه ذاتي لهذه المصفوفة مع قيمة ذاتية مساوية لرقم 1 ويعني ذلك ان المتجهات الذاتية لا تغير اتجاهها اثناء عملية التحويل eigenvector ولكن قد تتغير قيماتها بحدوث امتداد stretching او compressing وهي القيم الذاتية Eigenvalue هذه الخواص هي العملية الاساسية في تطبيقات كثيرة مثل Face recognition او Dimensionality reduction<br><img src="/images/posts/book_review/Eigenvectors.gif" alt=""><br>لنوضح اكثر دعنا نقول اننا قمنا بعملية Transformation للمصفوفة كما في الصورة ،سنجد ان المتجهات باللون الاحمر قد تغير اتجاهها بالفعل بعد عملية التحويل ، اما المتجهات باللون الازرق فظل الاتجاه ثابت يعني ذلك انه eigenvector لهذه المصفوفة ولكن طوله تغير بمقدار الضعف لذلك تكون Eigenvalue لهذا المتجه = 2.<br>لو نظرنا ايضا الي المتجهات باللون البنفسجي سنجد ان اتجاهها لم يتغير ايضا ولكن القيم الذاتية لها Eigenvalue = 1.</p><h4 id="التعبير-الرياضي"><a href="#التعبير-الرياضي" class="headerlink" title="التعبير الرياضي"></a>التعبير الرياضي</h4><p>يتم التعبير الرياضي عن هذه القيم والمتجهات بهذه المعادلة وتسمي characteristics equation :<br>$$ A\nu = \lambda\nu \\<br>|A-\lambda I|=0 \\<br>where\\ \lambda \Rightarrow Eigenvalue\\<br> \nu \Rightarrow Eigenvector $$</p><h3 id="كيف-يتحرك-الروبوت"><a href="#كيف-يتحرك-الروبوت" class="headerlink" title="كيف يتحرك الروبوت"></a>كيف يتحرك الروبوت</h3><p> للاجابة علي هذا السؤال لابد من دراسة معادلات الحركة الخاصة بالروبوت Robot Kinematics وفي الفصل الرابع من الكتاب يتحدث عن هذه النقطة ويعطينا وصفا للروبوت المستخدم في المشروع النهائي والتطبيقي علي هذا الكتاب.<br> <img src="/images/posts/book_review/kinematic_structure.png" alt="Robot Kinematics structure"></p><h4 id="ما-هي-معادلات-الحركة"><a href="#ما-هي-معادلات-الحركة" class="headerlink" title="ما هي معادلات الحركة"></a>ما هي معادلات الحركة</h4><p> اذن ما هي معادلات الحركة؟ علم Kinematics هو العلم الخاص بدراسة حركة الروبوت للاجابة علي سؤال محدد وصريح ما هي الامكان والحركات التي يستطيع الروبوت تحقيقها او الوصول اليها مع الاخذ في الاعتبار اطوال كل قطعة في الروبوت واتجاه حركاتها او دورانها ايضا مع اهمال القوة المسببة للحركة سواء كانت هذه الحركة ناتجة عن مواتير او شخص ما يحرك الروبوت. الشئ الوحيد الذي يهمنا هو هل الحركة التي نريدها تمت ام لا؟!</p><h3 id="iCub-robot"><a href="#iCub-robot" class="headerlink" title="iCub robot"></a>iCub robot</h3><p> <img src="/images/posts/book_review/icub.jpg" alt="iCub robot"><br> icub robot هو الروبوت المستخدم لتطبيق المشروع النهائي في هذا الكتاب وهو مشروع مفتوح المصدر لروبوت يحاكي شكل الانسان .<br> المشروع النهائي لهذا الكتاب هو محاولة جعل الروبوت يصل الي حل لمتاهة ثلاثية الابعاد 3D Maze تحتوي علي كرة في نقطة ما وعليه ايجاد الطريق المناسب لايصال هذه الكرة الي نهاية المتاهة.</p><h3 id="تطبيقات-الرؤية-الحاسوبية-Computer-vision"><a href="#تطبيقات-الرؤية-الحاسوبية-Computer-vision" class="headerlink" title="تطبيقات الرؤية الحاسوبية(Computer vision)"></a>تطبيقات الرؤية الحاسوبية(Computer vision)</h3><p> <img src="/images/posts/book_review/Optimus_Prime.png" alt="Optimus Prime wisdom"></p><blockquote><p> هناك ما هو أكثر مما تراه العين.</p></blockquote><p> في البداية تحدثنا ان الهدف الذي نسعي اليه هو جعل الروبوت اكثر ادراكا لما حوله ، فاذا استطعنا جعل الروبوت “يري” ما حوله ويتسطيع تفسيره فنحن علي الطريق الصحيح!.<br> رؤية الحاسوب Computer Vision من اهم المجالات في علم الحاسب ومؤخرا في الذكاء الاصطناعي والهدف منها بناء آلة قادرة علي فهم الصور وتحليلها. من اشهر الامثلة علي تطبيقات computer vision هي خاصية التعرف علي الوجه وهي موجوده الان في معظم الهواتف المحمولة.</p><p> في الفصل الخامس من الكتاب يناقش الكاتب واحدة من اهم التطبيقات والخورزميات المستخدمة في مجالات عديدة من تطبيقات الرؤية الحاسوبية وهي Inverse homography</p><h4 id="Inverse-homography"><a href="#Inverse-homography" class="headerlink" title="Inverse homography"></a>Inverse homography</h4><p> بداية لا اعلم اي ترجمة عربية لمصطلح homography ولكن للتوضيح اكثر دعنا نقول انها transformation ، وبالتالي نحن نتعامل هنا مع مصفوفة اي ان homography هو عبارة عن مصفوفة معينة تقوم بتحويل احداثيات الصورة من شكل لاخر.<br> <img src="/images/posts/book_review/homo.jpg" alt="homography"></p><p> للتوضيح اكثر دعنا ناخذ الامور ببساطة ، لو اننا نريد ان نعمل علي تطبيق يلعب الشطرنج عن طريق اخذ الحركات والقطع من العالم الحقيقي وتحليلها واقتراح الحركة المناسبة.</p><h4 id="المشكلة-؟"><a href="#المشكلة-؟" class="headerlink" title="المشكلة ؟"></a>المشكلة ؟</h4><p> <img src="/images/posts/book_review/inverse_simple.jpeg" alt="homography simply"><br> التعامل بالنسبة للكمبيوتر مع الشكل الثاني في الصورة (الاسقاط العمودي)الذي يمثل مربع متماثل الي حد ما اسهل بكثير من الصورة الواقعية الاولي والتي نتعامل معها - نحن البشر - بشكل طبيعي وبسهولة ايضا. لذا فان inverse homography وجدت لتحل هذه المشكلة وهي التحويل من الصورة الاولي الي الثانية كما في الصورة.</p><p> نرجع ثانية الي التطبيق المستخدم في الكتاب لنري ماذا حدث؟<br> <img src="/images/posts/book_review/homograph.png" alt=""><br> الشكل (1) يوضح كيف يري الروبوت المتاهة والشكل (2) يبين لنا بعد تطبيق الالجوريزم المطلوب الشكل العمودي الذي نريد التعامل معه حتي نستطيع رسم خريطة مناسبة ودقيقة للمتاهة كما نري في الصورة التالية:<br> <img src="/images/posts/book_review/result.png" alt=""></p><pre class="line-numbers language-cpp"><code class="language-cpp"> <span class="token keyword">const</span> std_msgs<span class="token operator">::</span>Empty<span class="token operator">&amp;</span> toggle_msg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="المصادر"><a href="#المصادر" class="headerlink" title="المصادر"></a>المصادر</h3><ol><li><a href="https://en.wikipedia.org/wiki/Probability" target="_blank" rel="noopener">Probability</a></li><li><a href="https://eltawil.org/sciencewonders/?p=4860" target="_blank" rel="noopener">قانون بايز والاحتمالات المشروطة</a></li><li><a href="http://blog.kleinproject.org/?p=588" target="_blank" rel="noopener">Matrices and Digital Images</a></li><li><a href="https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors" target="_blank" rel="noopener">Eigenvalues and eigenvectors</a></li><li><a href="https://walterfarah.wordpress.com/2013/07/09/humanoid-robot-lola/" target="_blank" rel="noopener">HUMANOID ROBOT. LOLA</a></li><li><a href="http://www.icub.org/" target="_blank" rel="noopener">iCub robot</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Robotics </tag>
            
            <tag> Machine Learning </tag>
            
            <tag> Reviews </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>اسخدام ROS مع rosserial و اردوينو Arduino</title>
      <link href="/2019/04/01/HowToUseArduinoWithROSInArabic/"/>
      <url>/2019/04/01/HowToUseArduinoWithROSInArabic/</url>
      
        <content type="html"><![CDATA[<p>أحد اهم الاسباب في لانتشار واستخدام ROS هو انه يوفر  hardware abstraction اي انه باختلاف الhw المستخدم في الروبوت ستجد tool معينة او library تساعدك في الوصول الي H.W الخاص بك. يعتبر Hardware abstraction layer في operating system بشكل عام وفي نظام ROS بشكل خاص هو حلقة الوصل بين الsoftware و hardware.<br><img src="/images/posts/rosserial/ROScomp.JPG" alt=""></p><h3 id="ROSserial"><a href="#ROSserial" class="headerlink" title="ROSserial"></a>ROSserial</h3><p>Rosserial هو احد هذه الادوات التي توفر اتصالا مباشر للهاردوير عن طريق Serial communication. بشكل عام تستخدم المتحكمات Microcontrollers  السيريال Serial مثل UART وبالطبع احد هذه المتحكمات هو Arduino board علي العكس يستخدم ROS TCP/IP للتواصل ، لذلك كان لابد من وجود Package تسمح بالتحويل والاتصال بين كل من Serial communication و TCP/IP communication<br><img src="/images/posts/rosserial/rosserial.jpg" alt=""><br>في هذه الصورة rosserial_server يمثل نظام ROS ، اما rosserial_client فهو يعبر عن المتحكمات التي نستخدمها وليكن اردوينو .<br>كل من server/client يتم ارسال البيانات والداتا بينهم عن طريق rosserial protocol ، لكي نفهم اكثر كيف يتم الامر ، دعنا نتخيل ان لدينا sensor حساس حرارة ، يتم قياس الحرارة عن طريقه باستخدام الاردوينو ، ثم بعد ذلك يتم ارسالها علي serial port ، في الجهة المقابلة سنجد ان rosserial_server وهي node تعمل علي نظام ROS تستقبل هذه البيانات - درجات الحرارة المقاسة - من Serial port الذي حددناه سابقا وتحويلها الي topic حيث يمكن استخدامها باي شكل كان في ROS.</p><h3 id="تسطيب-rosserial"><a href="#تسطيب-rosserial" class="headerlink" title="تسطيب rosserial"></a>تسطيب rosserial</h3><p>يتم تسطيب كل من rosserial server و rosserial client علي حسب استخدامنا الشخصي</p><h4 id="rosserial-server"><a href="#rosserial-server" class="headerlink" title="rosserial server"></a>rosserial server</h4><p>package يتم تسطيبها في نظام ros نفسه وغالبا سيكون علي الكمبيوتر الشخصي الذي نعمل عليه ويوجد لدينا اكثر من package علي حسب لغة البرمجة التي نعمل عليها  - تعتمد هذه المقالات علي python كلغة برمجية -</p><h4 id="rosserial-client"><a href="#rosserial-client" class="headerlink" title="rosserial client"></a>rosserial client</h4><p>وهي المكتبة التي يتم تحميلها علي الاردوينو حتي نستطيع استخدام rosserial علي arduino platform</p><h4 id="تسطيب-المكتبة"><a href="#تسطيب-المكتبة" class="headerlink" title="تسطيب المكتبة"></a>تسطيب المكتبة</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-kinetic-rosserial ros-kinetic-rosserial-server ros-kinetic-rosserial-arduino<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="تسطيب-rosserial-في-Arduino-IDE"><a href="#تسطيب-rosserial-في-Arduino-IDE" class="headerlink" title="تسطيب rosserial في Arduino IDE"></a>تسطيب rosserial في Arduino IDE</h4><p>لكي يتم استخدام مكتبة rosserial في اردوينو لابد من اضافتها في مجلد libraries ، وهذا السطر يتكفل بهذا الامر</p><pre class="line-numbers language-bash"><code class="language-bash">rosrun rosserial_arduino make_libraries.py <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="مثال-علي-rosserial"><a href="#مثال-علي-rosserial" class="headerlink" title="مثال علي rosserial"></a>مثال علي rosserial</h3><p><img src="/images/posts/rosserial/arduino.jpg" alt=""><br>بعد تسطيب rosserial يجب ان نجد المكتبة كما في الصورة السابقة ، وسنختار مثال جاهز للعمل عليه.</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">/* * rosserial Subscriber Example * Blinks an LED on callback */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ros.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;std_msgs/Empty.h></span></span>ros<span class="token operator">::</span>NodeHandle nh<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">messageCb</span><span class="token punctuation">(</span> <span class="token keyword">const</span> std_msgs<span class="token operator">::</span>Empty<span class="token operator">&amp;</span> toggle_msg<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> HIGH<span class="token operator">-</span><span class="token function">digitalRead</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// blink the led</span><span class="token punctuation">}</span>ros<span class="token operator">::</span>Subscriber<span class="token operator">&lt;</span>std_msgs<span class="token operator">::</span>Empty<span class="token operator">></span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token string">"toggle_led"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>messageCb <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  nh<span class="token punctuation">.</span><span class="token function">initNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  nh<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  nh<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>هذا المثال عبارة عن Subscriber node تقوم بتشغيل led عند ارسال رسالة اليها<br><img src="/images/posts/rosserial/blockdiagram.jpg" alt=""></p><pre class="line-numbers language-cpp"><code class="language-cpp">ros<span class="token operator">::</span>Subscriber<span class="token operator">&lt;</span>std_msgs<span class="token operator">::</span>Empty<span class="token operator">></span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token string">"toggle_led"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>messageCb <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>في هذا السطر يتم انشاء node اسمها sub وتستطيع التواصل عن طريق topic تدعي toggle_led ونوع الرسائل التي يمكن الاستماع اليها هو messageCb</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">const</span> std_msgs<span class="token operator">::</span>Empty<span class="token operator">&amp;</span> toggle_msg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>std_msgs هي package توجد في ROS وتحتوي علي data type التي يمكن استخدامها ، وهنا اسخدمنا Empty data type</p><h4 id="هل-كل-شئ-يعمل-؟"><a href="#هل-كل-شئ-يعمل-؟" class="headerlink" title="هل كل شئ يعمل ؟"></a>هل كل شئ يعمل ؟</h4><p>نقوم اولا بتشغيل rosserial server وذلك عن طريق الامر</p><pre class="line-numbers language-bash"><code class="language-bash">rosrun rosserial_python serial_node.py _port:<span class="token operator">=</span>/dev/ttyACM0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/posts/rosserial/test2.JPG" alt=""><br>rosserial_python هي مكتبة قمنا بتسطيبها من قبل وتسمح لنا باستخدام python في كتابة rosserial server<br>serial.node.py هو اسكريبت يقوم بالتواصل مع السريال عن طريق المنفذ port المحدد<br>_port:=/dev/ttyACM0 وهو المنفذ الذي نستطيع التواصل معه سواء بارسال او استقبال الداتا ونستطيع ان نجد رقم البورت من خلال الاردوينو كما في الصورة<br><img src="/images/posts/rosserial/test3.JPG" alt=""></p><p>بعد تشغيل rosserial server يمكننا ان نستخدم الامر</p><pre><code> rostopic list</code></pre><p> لاظهار الtopics  المتاح استخدامها .<br><img src="/images/posts/rosserial/test1.JPG" alt=""><br>الان نقوم بارسال message او بعني اخر publish message من خلال topic /toggle_led ، غالبا كل شئ يعمل بشكل صحيح! :D</p><pre><code>rostopic pub toggle/led std_msgs/Empty --once</code></pre><h4 id="ملاحظة-بسيطة"><a href="#ملاحظة-بسيطة" class="headerlink" title="ملاحظة بسيطة"></a>ملاحظة بسيطة</h4><p>لاسخدام اي من اوامر ros مثل rosrun او rostopic لابد ان نقوم بتشغيل ROS master node وذلك عن طريق الامر</p><pre><code>roscore</code></pre><h3 id="المصادر"><a href="#المصادر" class="headerlink" title="المصادر"></a>المصادر</h3><p><a href="http://wiki.ros.org/rosserial" target="_blank" rel="noopener">ros wiki - rosserial</a><br><a href="http://shop.oreilly.com/product/0636920024736.do" target="_blank" rel="noopener">Programming Robots with ROS</a></p><p><a href=""></a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Robotics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
            <tag> Arduino </tag>
            
            <tag> rosserial </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS Topics,Messages,Services وأشياء اخرى</title>
      <link href="/2019/04/01/IntroductionToROSmessagesAndServicesInArabic/"/>
      <url>/2019/04/01/IntroductionToROSmessagesAndServicesInArabic/</url>
      
        <content type="html"><![CDATA[<p>كما قولنا سابقا ، يتكون نظام ROS من عدد معين من الـnodes المستقلة والمرتبطة ببعضها بطريقة ما. إن الشئ الاجمل في ROS ليس بانه يتكون من عدد كبير من Nodes ولكن السحر الحقيقي يكون عندما تتواصل كل هnodes مع بعضها لنري نتيجة واضحة ومحددة. علي سبيل المثال قد يكون لدينا كاميرا وفي هذه الحالة نعتبرها node ترسل بعض الصور الي node اخري عن طريق topic تسمي cameraImage وتكون هذه الصورة علي هيئة رسالة message من النوع Image.</p><h3 id="Topics"><a href="#Topics" class="headerlink" title="Topics"></a>Topics</h3><p>Topic هي القناة الافتراضية التي تربط node بأخري حيث يتم التواصل بينهم عن طريق topic. وهي ايضا تطبيق لميكانيزم مشهور في الاتصالات وpublish/subscriber mechanism وهو واحد من اشهر الطرق المستخدمة في تبادل المعلومات data في نظام معين.<br>لكي يتم بدء ارسال الداتا عن طريق topic معين لابد من تحديد شيئين مهمين - يمكننا استعمال مصطلح advertise - :</p><ol><li>تحديد اسم الtopic المراد ارسال الداتا عليها ، ويفضل ان يكون الاسم معبرا عن الداتا التي يتم ارسالها</li><li>نوع الداتا للـmessages المراد ارسالها data type</li></ol><p>لكي تستقبل node اخري الداتا التي تم ارسالها ، ترسل هذه node subscribe requet الي roscore - master server - وبهذه الطريقة اي رسائل يتم ارسالها ستصل الي subscriber node.</p><h4 id="Publishing-to-a-topic"><a href="#Publishing-to-a-topic" class="headerlink" title="Publishing to a topic"></a>Publishing to a topic</h4><p><img src="/images/posts/ros/topic1.png" alt=""></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> rospy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ستجد هذا السطر في كل الاكواد تقريبا لانه المسئول عن جميع الدوال والمكتبات الخاصة بنظام ROS في بيئة python</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> std_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> Int32<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>في هذا السطر يتم تحديد نوع message التي يتم من خلالها ارسال الداتا. في هذه الحالة استخدمنا 32bit-Integer .<br>std_msgs هي package موجودة في ROS وتحتوي علي انواع كثيرة من الmsg data types كما في الصورة:<br><img src="/images/posts/ros/topic2.png" alt=""></p><h4 id="Subscribing-to-a-Topic"><a href="#Subscribing-to-a-Topic" class="headerlink" title="Subscribing to a Topic"></a>Subscribing to a Topic</h4><p><img src="/images/posts/ros/topic3.png" alt=""></p><pre class="line-numbers language-Python"><code class="language-Python">def callback(msg):     print msg.data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>يعتبر ROS event-driven system لذلك نري استخدام callbaks بشكل كبير ، في كل مرة يتم ارسال message الي subscriber node يتم استدعاء callback function حيث تكون message المرسلة هي الـ parameter لهذه الدالة.</p><pre class="line-numbers language-Python"><code class="language-Python">(sub = rospy.Subscriber('counter', Int32, callback<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>السطر المسئول عن initialization للـ subscriber node وتكون الparams كالتالي</p><ol><li>اسم الnode المراد تتبعها - node to subscribe -</li><li>نوع الداتا data type</li><li>الدالة المراد تنفيذها عند استقبال اي message.</li></ol><h3 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h3><p>service هي طريقة اخري لتمرير الداتا بين nodes مختلفة ، تعتمد Services علي Request/reply pattern وهي تشبه الي حد كبير طريقة عمل Messages كما شرحناها سابقا ولكن الاختلاف هنا انها تنقسم الي two messages واحدة لارسال request والاخري للرد عليه reply<br><img src="/images/posts/ros/RequestResponse.jpg" alt=""><br>استخدام Services يشبه الي حد كبير طريقة استخدامنا للمواقع التي نزورها يوميا ، فمثلا عند كتابة <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a> فهذا يعتبر request وعندما يصل الي السيرفر يتم الرد reply بداتا معينة ، كذلك تعمل Services في ROS ، من خلال node يتم عمل request وفي هذه الحالة تعتبر هذه الnode بمثابة client ، وعندما يصل request الي السيرفر - node - يتم استدعاء callback function مسئولة عن reply</p><h4 id="إنشاء-Service"><a href="#إنشاء-Service" class="headerlink" title="إنشاء Service"></a>إنشاء Service</h4><p>الخطوة الاولي لانشاء service هي تعريف كل من الدخل والخرج input/output ، علي سبيل المثال لدينا two nodes واحدة خاصة بالكاميرا واخري لعمل processing علي الصور التي تاتي من الكاميرا ، في هذه الحالة عند استخدامنا لـService ، فيتم ارسال request يكون عبارة عن طلب صورة من الكاميرا ، لذلك يكون reply هو عبارة عن messages اخري من نوع Image مثلا.<br>يتم انشاء service في ملف منفصل يعرف ب srv files كما شرحنا سابقا ايضا في مقال التعامل مع نظام الملفات في ROS</p><h4 id="انشاء-ملف-srv"><a href="#انشاء-ملف-srv" class="headerlink" title="انشاء ملف .srv"></a>انشاء ملف .srv</h4><pre class="line-numbers language-bash"><code class="language-bash"> roscd ROS_Series $ <span class="token function">mkdir</span> srv $<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>السطر الاول عبارة عن اسم package التي تحتوي علي الملفات خلال هذه السلسلة .<br>ان لم تجد فولدر srv ، نستطيع انشاءه بهذا السطر<br><img src="/images/posts/ros/srv1.png" alt=""></p><p>لو اردنا انشاء service حيث يكون الدخل هو string والخرج هو عدد الحروف في هذة الكلمة او string</p><blockquote><p>نقوم بانشاء ملف WordCount.srv ويتم وضعه في فولدر srv ويحتوي علي list تعبر عن كل الدخل والخرج ، مفصول بينهم — حيث يتم البدء بالدخل والانهاء بالخرج<br><code>`</code></p></blockquote><h2 id="string-words"><a href="#string-words" class="headerlink" title="string words"></a>string words</h2><p>uint32 count</p><pre><code>![](/images/posts/ros/srv2.png)#### build serviceبعدما كتبنا الملف التعريفي للـ Service التي نعمل عليها ، نريد الان استخدامها وذلك عن طريق الامر</code></pre><p>catkin_make $</p><pre><code>ولكن قبل ذلك لابد من اضافة بعض التعليمات اثناء عملية building وذلك عن طريق تعديلين في كل من package.xml , Cmakelist.txt##### package.xml fileيتم اضافة هذه السطور الي ملف package.xml</code></pre><p>&lt;build_depend&gt;message_generation&lt;/build_depend&gt;<br>  &lt;exec_depend&gt;message_runtime&lt;/exec_depend&gt;</p><pre><code>##### CMakeList.txtهناك ايضا بعض التعديلات في ملف CMaktlist لكي يتم استخراج بعض الملفات المهمة اثناء عملية Building للPackage الخاصة بنايتم اضافة هذه السطور كما هو موضح</code></pre><p>find_package(catkin REQUIRED COMPONENTS<br>   roscpp<br>   rospy<br>   std_msgs<br>   message_generation<br>)</p><p>generate_messages(<br>  DEPENDENCIES<br>  std_msgs<br>)</p><pre><code>![](/images/posts/ros/srv3.png)بعد استخدام الامر catkin_make سنري ان هناك ثلاث ملفات عبارة عن classes WordCount, WordCountRequest, and WordCountResponse.  وهذه الclasses تم انشاءها تلاقي وتستخدم كـ APIs للتعامل مع service التي نريدها&gt; تستطيع ان تجد هذه الملفات في هذا المسار  ~/catkin_ws/devel/lib/py2.7/$pkg_nameكل ما فعلناه سابقا هو تحديد ماهية الService وكيف ستكون ، اي انها ستاخذ String data وستعطينا Int يعبر عن عدد الكلمات في هذا الString ولكن حتي الان لم نوضح كيف سيتم تنفيذ ذلك !Service في نظام الROS قائمة علي Callback-mechanism اي ان الservice توفر دالة معينة سيتم استدعائها عندما يتم تشغيل او النداء علي هذه الـservice وهي نفس طريقة عمل client-server لذلك يجب علينا بناء server خاص بهذه الservice حيث عندما يكون هناك request يتم استدعاء دالة تقوم بالرد علي هذا الrequest - الطلب -#### انشاء service_server![](/images/posts/ros/srv5.png)```Pythondef count_words(request):      return WordCountResponse(len(request.words.split()))</code></pre><p>هي الدالة التي سيتم استدعائها عند النداء علي service وهي المسئولة عن عد الكلمات في كل جملة او string</p><pre><code>from ros_series.srv import WordCount,WordCountResponse</code></pre><p>هذه الملفات تم انشاءه بشكل تلقائي عند استخدامنا الامر catkin_make ونلاحظ هنا ان WordCountResponse constructor ياخذ نفس عدد الparameter الذي حددناه سابقا عند انساء ملف wordcount.srv</p><pre><code>service = rospy.Service('word_count', WordCount, count_words)</code></pre><p>بعد ذلك ، يتم انشاء الservice عن طريق ثلاثة parameters :</p><ol><li>اسم هذه الservice –&gt; ‘word_count’</li><li>نوع هذه الservice وكما هو اضح ، نفس الملف التعريفي الذي قمنا بانشاءه سابقا</li><li>الدالة التي سيتم استدعائها في كل مرة يتم النداء علي هذه الservice and<h4 id="إنشاء-Service-client"><a href="#إنشاء-Service-client" class="headerlink" title="إنشاء Service client"></a>إنشاء Service client</h4><img src="/images/posts/ros/srv6.png" alt=""><pre><code>rospy.wait_for_service('word_count')</code></pre>يتم انتظار الService حتي تصبح متاحة ، بمعني انه لابد ان يتم تشغيل service server كي يكون هناك reply عند استدعاء service<br><code>`</code><br>word_counter = rospy.ServiceProxy(‘word_count’, WordCount)</li></ol><pre><code>يتم النداء علي Service عن طريق الدالة ServiceProxy وذلك عن طريق اسم الservice و نوع الService كما اشرنا سابقا ايضا#### هل كل شئ يعمل معاالان نشغل ROS master server عن طريق الامر roscoreونقوم بعدها بتشغيل الserver الذي قمنا ببناءه للـ Service . كما هو موضح بالصورة.![](/images/posts/ros/srv4.png)رائع ! كل شئ يعمل الان كما هو متوقع تماما !#### ملاحظاتهناك بعض الاوامر التي يمكنها مساعدتنا اثناء التعامل مع Services</code></pre><p>rossrv list $</p><pre><code>يظهر لنا قائمة بكل الـServices المتاح استخدامها</code></pre><p> rosservice call $SERVICE_NAME $params…. $</p><pre><code>طريقة اخري لاستدعاء Service ولكن لابد ان يكون هناك Server متاح كي يكون هناك رد reply عند النداء علي service معينةمثال علي ذلك : rosservice call word_count 'hello service from client side' word_count هي الدالة التي تم انشاءها  عند انشاء ملف service server</code></pre><p>  rosservice info $SERVICE_NAME $</p><pre><code> لمعرفة معلومات عن service معينة</code></pre><p> rossrv show $SERVICE_NAME  $<br> <code>`</code><br> هذا الامر يظهر الملف التعريفي للـService حيث يوضح لنا المدخلات والمخرجات inputs/output الخاص بالـService</p><h3 id="المصادر"><a href="#المصادر" class="headerlink" title="المصادر"></a>المصادر</h3><p> <a href="http://shop.oreilly.com/product/0636920024736.do" target="_blank" rel="noopener">Programming Robots with ROS</a><br> <a href="http://wiki.ros.org/rospy/Overview/Services" target="_blank" rel="noopener">ROS Wiki</a><br><a href="https://vanilla-java.github.io/2016/05/17/Modelling-Microservice-Patterns-in-Code.html" target="_blank" rel="noopener">Microservice patterns in codes</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Robotics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>مقدمة عن Robot Operating System - ROS -</title>
      <link href="/2019/04/01/IntroductionToRobotOperatingSystemInArabic/"/>
      <url>/2019/04/01/IntroductionToRobotOperatingSystemInArabic/</url>
      
        <content type="html"><![CDATA[<p>لاشك ان مجال الروبوتات يتطور في الاعوام القليلة الماضية بشكل كبير واصبح موضع اهتمام<br>للكثير من الشركات في مجال التقنية.نري ذلك الاهتمام بوضوح في شركتين مثل Google و Tesla وذلك نتيجة للتطوير الهائل الذي يشهده مجال Self-driving car وبشكل عام مجال الروبوتات.<br>من الواضح ايضا ان الروبوت - باختلافه انواعه- هو عبارة عن مكونات وادوات تتفاعل مع بعضها بشكل او بآخر لتؤدي بعض المهام والوظائف التي صممت لها.<br>فمثلا اذا اردنا تطوير روبوت يشبه السيارة الصغيرة نجد انه يتكون من</p><blockquote><p>Wheels –&gt; العجلة</p></blockquote><blockquote><p>Motors –&gt; بعض المواتير التي من خلالها يمكن التحكم في دوران العجلة</p></blockquote><blockquote><p>Sensors –&gt; حساسات مختلفة لقياس سرعة العجل علي سبيل المثال</p></blockquote><p>ومعرفة اتجاه الروبوت<br>وبالطبع متحكم - كمبيوتر - يستطيع التحكم في كل هذه الاجزاء معا لاخراج النتائج المطلوبة.<br>الكثير من هذه المكونات تجده بشكل دائم في اي روبوت باختلاف المهام والوظائف التي يقوم بها لذلك كان لابد من وجود شئ ما يسهل اعادة استخدام الاكواد والمكتبات التي تم تطويرها من قبل مطوري الروبوتات لكي تسهل المهمة عند تطوير روبوت جديد لذلك وجد نظام ROS.</p><h3 id="ما-هو-ROS"><a href="#ما-هو-ROS" class="headerlink" title="ما هو ROS"></a>ما هو ROS</h3><p><img src="/images/posts/ROSLogo.webp" alt="ROS Logo"><br>هو اختصار لـ <strong>R</strong> obot <strong>O</strong> perating <strong>S</strong> ystem وهو عبارة عن software framework  اي اطار عمل مفتوح المصدر يجمع كل المكتبات والادوات المتاحة لتطوير الروبوتات في اطار عمل واحد.</p><blockquote><p>ROS (Robot Operating System) provides libraries and tools to help software developers create robot applications.</p></blockquote><p>فبدلا من اختراع العجلة من البداية واجراء نفس الالجوريزمات عند تطوير روبوت مختلف في كل مرة ، تم جمع كل هذه المكتبات والادوات  في ROS حيث يمكن الاستفادة من تطوير شخص او مؤسسة لروبوت ما ، واستخدامها مباشرة لتطوير الروبوت الخاص بي .<br>ROS تم تطويره من قبل <a href="http://ai.stanford.edu/" target="_blank" rel="noopener">Stanford AI Laboratory</a> في 2007 ويتم ادارته وتطويره الان من قبل <a href="http://osrf.hyperarts.com/" target="_blank" rel="noopener">The Open Source Robotics Foundation </a></p><h3 id="هل-يعتبر-ROS-نظام-تشغيل"><a href="#هل-يعتبر-ROS-نظام-تشغيل" class="headerlink" title="هل يعتبر ROS نظام تشغيل"></a>هل يعتبر ROS نظام تشغيل</h3><p>لا يعتبر ROS  نظام تشغيل حرفيا ولكنه يشبه الي حد كبير انطمة التشغيل المختلفةسواء في طريقة عملها او معماريتها.<br>حيث انه يتكون من Nodes “عقد” او بمعني اخر Process ويتم التواصل بين هذه العقد عن طريق Messege وتصل هذه الرسائل الي العقدة المطلوبة عن طريق قنوات افتراضية تسمي Topic<br>لذلك يشبه ROS انظمة التشغيل في طريقة عملها<br>وسنتطرق لكل هذه المصطلحات بشكل تفصيلي مرة اخري.<br><img src="/images/posts/ROS_01.webp" alt="How ROS works"></p><h3 id="لماذا-نستخدم-ROS"><a href="#لماذا-نستخدم-ROS" class="headerlink" title="لماذا نستخدم ROS"></a>لماذا نستخدم ROS</h3><p>الكثير بتسائل لماذا يجب علينا استخدام ROS ؟ ما هي الفائدة ؟<br>كما أشرنا سابقا ان الهدف الاساسي من تطوير ROS هو إعادة استخدام الاكواد والمكتبات مرة اخري بدون عناء وتوفيرا للوقت لذلك هناك ثلاث أسباب رئيسية لاستخدام ROS في تطوير الروبوتات:</p><ol><li>CODE-Reuse : وهي النقطة الاهم والسبب الرئيسي لاستخدام ROS حيث انه مصمم بطريقة تجعل اعادة استخدام الكود او الالجوريزم المطور اسهل باختلاف الروبوت او واستخدامها</li><li>Distributed processing: أحد اهم الميزات لاستخدام ROS انه من الممكن ان يكون علي انطمة مختلفة وليس بالضرورة ان يوجد علي نفس النظام او نفس المعمارية. علي سبيل المثال بامكانك ارسال رسائل Messegs من الاردوينو Arduino مباشرة الي Laptop والذي يقوم بدوره بارسالها الي raspberry pi لتؤدي وظيفة ما.</li><li>Language independence: يمكن استخدام ROS باغلب لغات البرمجة الموجودة واشهرها C++,Python and Java حيث انه لا يعتمد علي لغة معينة لذلك تسطيع استخدام اللغة المناسبة لك.</li></ol><p>ايضا من الاسباب التي تجعل من ROS بيئة عمل مناسبة لتطوير الروبوت هو انه مفتوح المصدر Open Source framework لذلك نستطيع التعديل والاضافة علي المكتبات المتاحة وليس مجرد استخدامها فقط.</p><h3 id="كيف-يعمل-ROS"><a href="#كيف-يعمل-ROS" class="headerlink" title="كيف يعمل ROS"></a>كيف يعمل ROS</h3><p>ساكتب في مقال اخر اساسيات ROS وساشرح بشكل تفصيلي اكثر مما يتكون وكيف يعمل ولكن دعنا الان نتحدث بشكل عام كيف يعمل ROS ؟<br>بشكل عام ROS هو عبارة عن مجموعة من المكتبات التي تكون متصلة بمكونات مختلفة من الهاردوير وذلك لتؤدي وظيفة معينة عن طريق تمرير الرسائل بينهم.<br>اذن فهو يتكون من عقدة او Main process تدعي Master Node وهي المسئولة عن التواصل مع باقي العقد “المكونات” ويكون هذا التواصل عن طريقة Messages.<br><img src="/images/posts/ros_02.png" alt=""><br>دعنا ناخذ مثال عملي علي ذلك ، في البداية تبدا ROS MASTER بتشغيل النظام حيث يتم التواصل بين باقي العقد او المكونات عن طريق هذه العقدة في النظام.<br>نريد الان ان نرسل رسائل من talker node الي listener node ، عند تشغيل talker node اي بمعني اخر publish message فهي تقوم بالتواصل مع ROS Master اولا وتقوم بارسال الرسائل اليها عن طريق قناة افتراضية تدعي topic.<br>من الناحية الاخري listener node تنتظر اي رسائل من ROS Master او بمعني اخر Subscribe  لذلك تقوم العقدة الرئيسية بدورها بارسال الرسائل المطلوبة الي الواجهة المقصودة.</p><h3 id="انظمة-التشغيل-المدعومة-من-ROS"><a href="#انظمة-التشغيل-المدعومة-من-ROS" class="headerlink" title="انظمة التشغيل المدعومة من ROS"></a>انظمة التشغيل المدعومة من ROS</h3><p>نظام التشغيل الرئيسي لنظام ROS هو Ubuntu وهو الاكثر ثباتا وانتشارا وحتي الان لا توجد نسخة ثابتة بدون مشاكل لنظام الويندوز<br><img src="/images/posts/ros_03.png" alt=""></p><h4 id="إصدارات-ROS"><a href="#إصدارات-ROS" class="headerlink" title="إصدارات ROS"></a>إصدارات ROS</h4><p>كل عام يوجد توزيعات مختلفة لنظام ROS وحتي الان هذه هي الاصدارات المتاحة والاكثر ثباتا</p><table><thead><tr><th>نهاية الدعم</th><th>الدعم</th><th>الاصدار</th></tr></thead><tbody><tr><td>April, 2021</td><td>وهي النسخة الاكثر ثباتا حتي الان وتدعم الاصدار Ubuntu 16.04 (LTS)</td><td>Kinetic Kame</td></tr><tr><td>May, 2019</td><td>هي ايضا من الاصدارات التي لا يصاحبها مشاكل كثيرة وهي مخصصة للاصدارات الاتية Ubuntu Xenial, Yakkety and Zesty حتي Ubuntu 17.04</td><td>Lunar</td></tr><tr><td>May, 2023</td><td>وهي الاحدث حتي الان حيث نُشرت في مايو 2018 وخصصت للاصدارات الاتية Ubuntu Artful (17.10), Bionic (18.04 LTS)</td><td>Melodic Morenia</td></tr></tbody></table><h3 id="ما-هي-عيوب-ROS"><a href="#ما-هي-عيوب-ROS" class="headerlink" title="ما هي عيوب ROS"></a>ما هي عيوب ROS</h3><p>لا شك ان ROS به كثير من المميزات التي لا غني عنها ولكن من خلال تجربتي انه ليس بالسهل في بدايته لذلك سيحتاج منك الصبر وبذل الجهد مع الكثير والكثير من البحث حتي تتمكن منه في البداية .<br>ايضا من عيوب الROS هو دعمه الكامل لUbuntu فقط وعند تجربته علي نظام اخر مثلا ويندوز سيواجهك الكثير من المشاكل التي لا تنتهي غالبا.</p><h3 id="تثبيت-الاصدار-المناسب"><a href="#تثبيت-الاصدار-المناسب" class="headerlink" title="تثبيت الاصدار المناسب"></a>تثبيت الاصدار المناسب</h3><p>علما سابقا ان لكل اصدار ROS يقابله التوزيعة المناسبة وايضا الاصدار المناسب والمتاح لتشغيله من Ubuntu لذلك عليك معرفة اي اصدار مناسب لك.</p><h4 id="المتطلبات"><a href="#المتطلبات" class="headerlink" title="المتطلبات"></a>المتطلبات</h4><ol><li>لابد ان تعرف اي اصدار من Ubuntu تستخدمه</li><li>لغة برمجة واحدة ع الاقل</li><li>الصبر والبحث</li></ol><h4 id="كيف-تبدا-في-تثبيب-الاصدار-المناسب"><a href="#كيف-تبدا-في-تثبيب-الاصدار-المناسب" class="headerlink" title="كيف تبدا في تثبيب الاصدار المناسب"></a>كيف تبدا في تثبيب الاصدار المناسب</h4><p>بعد التاكد من الاصدار المناسب لجهازك ستجد التعليمات الكاملة لثبيته من خلال <a href="http://wiki.ros.org/ROS/Installation" target="_blank" rel="noopener">ROS wiki</a> وهي الصفحة الرسمية الخاصة بتوثيق ROS وستجد بها ايضا عدد من الشروحات التي لا غني عنها في البداية.</p><blockquote><p><strong>  هذه نظرة عامة عن ROS وفي خلال سلسلة من المقالات ساحاول ان اشرح بالتفصيل مع الكثير من الامثلة </strong></p></blockquote><h3 id="المصادر"><a href="#المصادر" class="headerlink" title="المصادر"></a>المصادر</h3><ol><li><a href="http://www.clearpathrobotics.com/assets/guides/ros/Intro%20to%20the%20Robot%20Operating%20System.html" target="_blank" rel="noopener">Clearpath robotics</a></li><li><a href="http://wiki.ros.org/" target="_blank" rel="noopener">ROS Wiki</a></li><li><a href="https://www.packtpub.com/hardware-and-creative/ros-robotics-projects" target="_blank" rel="noopener">ROS Robotics Projects</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Robotics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
